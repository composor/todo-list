{"version":3,"file":"app.js","sources":["../node_modules/composi/lib/h.js","../node_modules/composi/lib/patch.js","../dev/utils/uuid.js","../node_modules/composi/lib/mixin.js","../node_modules/composi/lib/component.js","../dev/components/title.js","../dev/components/todo-list.js","../dev/components/list-item.js","../dev/components/footer.js","../dev/app.js","../dev/utils/localStorage.js"],"sourcesContent":["/**\n * Hyperscript function. Enables definition of HTML/SVG using functions.\n * @param {string} type The name of the HTML or SVG tag to create.\n * @param {object} props And object of property/value pairs.\n * @param {string, number, boolean, any[]} children Any child elements.\n */\nexport function h(type, props, ...args) {\n  let stack = [], node\n  const children = []\n  stack = stack.concat(args.reverse())\n\n  while (stack.length) {\n    if (Array.isArray((node = stack.pop()))) {\n      node.map(item => stack.unshift(item))\n    } else if (node != null && node !== true && node !== false) {\n      typeof node === \"number\" ? node = node + '' : node\n      children.push(node)\n    }\n  }\n  \n  return typeof type === \"string\" \n    ? {type, props: props || {}, children } \n    : type(props || {}, children)\n}\n","/**\n * A function to merge two objects together. The properties of the second object will overwrite any matching properties in the first object.\n * @param {Object} obj1 The first object to merge.\n * @param {Object} obj2 The second object to merge.\n */\nfunction mixin(obj1, obj2) {\n  const result = {}\n  for (let i in obj1) {\n    result[i] = obj1[i]\n  }\n  for (let i in obj2) {\n    result[i] = obj2[i]\n  }\n  return result\n}\n\n/**\n * @constructor \n * @param {node} oldNode Original node or null.\n * @param {node} node New node.\n * @param {node} element The component root element.\n * @param {node} container The container element in which component is rendered.\n */\nexport function patch(oldNode, node, element, container) {\n  return diffAndPatch(container || document.body, element, oldNode, node)\n}\n\n/**\n * Patch functions:\n * setProps \n * createNode\n * createElement\n * getKey\n * updateElement\n * removeElement\n * diffAndPatch\n */\n\n/**\n * Function to set properties and attributes on element.\n * @param {node} element \n * @param {string} name \n * @param {string|number|boolean} value \n * @param {string|number|boolean} oldValue \n */\nfunction setProps(element, name, value, oldValue) {\n  if (name === 'key') {\n  } else if (name === 'style') {\n    for (let name in mixin(oldValue, (value = value || {}))) {\n      element.style[name] = String(value[name]) || ''\n    }\n  } else {\n    try {\n      element[name] = value\n    } catch (err) {}\n\n    if (typeof value !== 'function') {\n      if (!!value) {\n        // Support SVG 'xlink:href' property:\n        if (name === 'xlink-href') {\n          element.setAttributeNS('http://www.w3.org/1999/xlink', 'href', value)\n        } else {\n          element.setAttribute(name, value)\n        }\n      } else {\n        element.removeAttribute(name)\n      }\n    }\n  }\n}\n\n/**\n * Function to create an HTML or SVG node.\n * @param {node} node node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createNode(node, svg) {\n  const element = (svg = svg || node.type === \"svg\")\n  ? document.createElementNS(\"http://www.w3.org/2000/svg\", node.type)\n  : document.createElement(node.type)\n\n  Object.keys(node.props).forEach(key => setProps(element, key, node.props[key]))\n  node.children.map(child => element.appendChild(createElement(child, svg)))\n  return element\n}\n\n/**\n * Function to convert hyperscript/JSX into DOM nodes.\n * @param {jsx|hyperscript} node A node to create.\n * @param {svg} svg Whether the node is SVG or not.\n */\nfunction createElement(node, svg) {\n  return typeof node === \"string\" ? document.createTextNode(node) : createNode(node, svg)\n}\n\n/**\n * Function to get a node's key.\n * @param {node} node \n */\nfunction getKey(node) {\n  if (node && node.props) {\n    return node.props.key\n  }\n}\n\n/**\n * Update an element with new values for properties and/or children.\n * @param {Element} element \n * @param {node} oldProps \n * @param {object} props \n */\nfunction updateElement(element, oldProps, props) {\n  Object.keys(mixin(oldProps, props)).forEach(key => {\n    let value = props[key]\n    let oldValue = key === \"value\" || key === \"checked\" ? element[key] : oldProps[key]\n\n    if (value !== oldValue) setProps(element, key, value, oldValue)\n  })\n}\n\n/**\n * Function to remove element from DOM.\n * @param {node} container The container of the element to remove.\n * @param {node} element The element to remove.\n */\nconst removeElement = (container, element) => container.removeChild(element)\n\n/**\n * Function to patch DOM. Diffs virtual nodes, then patches the DOM.\n * @param {node} container \n * @param {node} element \n * @param {node} oldNode \n * @param {node} node \n * @param {boolean} svg \n * @param {node} nextSibling \n */\nfunction diffAndPatch(container, element, oldNode, node, svg, nextSibling) {\n  if (oldNode == null) {\n    element = container.insertBefore(createElement(node, svg), element)\n  } else if (node.type != null && node.type === oldNode.type) {\n    updateElement(element, oldNode.props, node.props)\n\n    svg = svg || node.type === \"svg\"\n    const len = node.children.length\n    let oldLen = oldNode.children.length\n    let oldKeyed = {}\n    let oldElements = []\n    let keyed = {}\n\n    let k = 0\n    while (k < oldLen) {\n      let oldElement = (oldElements[k] = element.childNodes[k])\n      let oldChild = oldNode.children[k]\n      let oldKey = getKey(oldChild)\n      if (null != oldKey) oldKeyed[oldKey] = [oldElement, oldChild]\n      k++\n    }\n\n    let i = 0, j = 0\n\n    while (j < len) {\n      let oldElement = oldElements[i]\n      let oldChild = oldNode.children[i]\n      let newChild = node.children[j]\n      let oldKey = getKey(oldChild)\n  \n      if (keyed[oldKey]) {\n        i++\n        continue\n      }\n      \n      let newKey = getKey(newChild)\n      let keyedNode = oldKeyed[newKey] || []\n\n      if (null == newKey) {\n        if (null == oldKey) {\n          diffAndPatch(element, oldElement, oldChild, newChild, svg)\n          j++\n        }\n        i++\n      } else {\n        oldKey === newKey ? diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) && i++ :\n        keyedNode[0] ? element.insertBefore(keyedNode[0], oldElement) && diffAndPatch(element, keyedNode[0], keyedNode[1], newChild, svg) : diffAndPatch(element, oldElement, null, newChild, svg)\n        \n        keyed[newKey] = newChild\n\n        j++\n      }\n    }\n\n    while (i < oldLen) {\n      let oldChild = oldNode.children[i]\n      let oldKey = getKey(oldChild)\n      if (null == oldKey) removeElement(element, oldElements[i])\n      i++\n    }\n\n    Object.keys(oldKeyed).forEach(key => {\n      let keyedNode = oldKeyed[key]\n      let reusableNode = keyedNode[1]\n      if (!keyed[reusableNode.props.key]) {\n        removeElement(element, keyedNode[0])\n      }\n    })\n  } else if (element && node !== element.nodeValue) {\n    if (typeof node === \"string\" && typeof oldNode === \"string\") {\n      element.nodeValue = node\n    } else {\n      element = container.insertBefore(\n        createElement(node, svg),\n        (nextSibling = element)\n      )\n      removeElement(container, nextSibling, oldNode.data)\n    }\n  }\n  return element\n}\n","export function uuid() {\n  return Math.floor(Math.random() * 100000000 + Math.random() * 1000)\n} \n","/**\n * A mixin function used for updating component state.\n * @param {object} obj1 An object as the target.\n * @param {object} obj2 An object of properties to target.\n */\nexport const mixin = (obj1, obj2) => {\n  Object.keys(obj2).forEach(p => {\n    if (obj2.hasOwnProperty(p)) {\n      Object.defineProperty(obj1, p, {\n        value: obj2[p],\n        writable: true,\n        enumerable: false,\n        configurable: true\n      })\n    }\n  })\n}\n","import {h} from './h'\nimport {patch} from './patch'\nimport {mixin} from './mixin'\n\nvar rAF = window.requestAnimationFrame\n  || window.webkitRequestAnimationFrame\n  || window.mozRequestAnimationFrame\n  || window.msRequestAnimationFrame\n  || function(cb) { return setTimeout(cb, 16) }\n\n/**\n * @type {object} dataStore A pseudo-private property using Date object to store the component's state.\n */\nconst dataStore = new Date().getTime()\n\n/**\n * @class Class to create a component\n */\nexport class Component {\n  /**\n   * Constructor for Component class.\n   * @typedef {object} props An object of property/values to configure the class instance.\n   * @property {string|element} props.container The container element in which to render the component.\n   * @property {state} [props.state] The state object of the component. This can be of type boolean, string, number, object or array.\n   * @property {function} props.render A function that returns nodes to render to the DOM.\n   */\n  constructor(props) {\n    /** @type {props} */\n    if (!props) props = {}\n    this.selector = props.container || props.root ||  'body'\n    \n    if (props.render) {\n      this.render = props.render\n    }\n    \n    if (props.state) {\n      this.state = props.state\n    }\n\n    this.oldNode = null\n    if (this.selector) {\n      this.container = document.querySelector(this.selector)\n    }\n    this.componentShouldUpdate = true\n    \n    this.mounted = false\n    this.element\n    \n    /**\n     * Handle lifecycle methods.\n     */\n    if (props.beforeCreateComponent) {\n      this.beforeCreateComponent = props.beforeCreateComponent\n    }\n    if (props.componentWasCreated) {\n      this.componentWasCreated = props.componentWasCreated\n    }\n    if (props.componentWillUpdate) {\n      this.componentWillUpdate = props.componentWillUpdate\n    }\n    if (props.componentDidUpdate) {\n      this.componentDidUpdate = props.componentDidUpdate\n    }\n    if (props.componentWillUnmount) {\n      this.componentWillUnmount = props.componentWillUnmount\n    }\n  }\n\n  /**\n   * Define getters and setters for state.\n   */\n  set state(data) {\n    this[dataStore] = data\n    rAF(() => this.update())\n  }\n\n  get state() {\n    return this[dataStore]\n  }\n  \n  /**\n   * Method to set a component's state.\n   * @param {string|number|boolean|object|array} data The data to set.\n   * @param {number} [position] The index of an array whose data you want to set.\n   */\n  setState(data, position) {\n    if (typeof data === 'function') {\n      const state = data.call(this, this.state)\n      if (typeof state !== 'function' && !!state) this.setState(state)\n    }\n    if (Array.isArray(this.state)) {\n      const state = this.state\n      if (position || position === 0) {\n        if (typeof state[position] === 'object') {\n          mixin(state[position], data)\n          this.state = state\n        } else {\n          state[position] = data\n          this.state = state\n        }\n      } else {\n        this.state = state\n      }\n    } else if (typeof this.state === 'object') {\n      const state = this.state\n      mixin(state, data)\n      this.state = state\n    } else {\n      this.state = data\n    }\n  }\n\n  /**\n   * Function to render component after data changes.\n   * If data is passed as argument, it will be used.\n   * Otherwise state will be used.\n   * @param {boolean|number|string|object|array} [data ]\n   * @returns void\n   */\n  update(data) {\n    if (!this.render) return\n\n    // If data is 0 or not boolean, use,\n    // else use component state.\n    let __data  = this.state\n    if (data !== true && (data === 0 || data)) __data = data\n\n    if (this.container && typeof this.container === 'string') {\n      this.selector = this.container\n      this.container = document.querySelector(this.container)\n    }\n\n    // Check if vnode already exists.\n    // Used for deciding whether to fire lifecycle events.\n    const __oldNode = this.oldNode\n    const __render = this.render\n    function testIfVNodesDiffer(data) {\n      try {\n        if (JSON.stringify(this.oldNode) === JSON.stringify(__render(data))) {\n          return false\n        } else {\n          return true\n        }\n      } catch(err) {\n        return true\n      }\n    }\n    // Create virtual dom and check if component id already exists in document.\n    const vdom = this.render(__data)\n    let elem\n    if (vdom && vdom.props && vdom.props.id) {\n      try {\n        elem = this.container.querySelector(`#${vdom.props.id}`)\n      } catch(err) {}\n    }\n\n    // If component element id already exists in DOM, \n    // remove it before rendering the component.\n    if (elem && !this.mounted) {\n      elem.parentNode.removeChild(elem)\n    }\n\n    // Patch DOM with component update.\n    this.element = patch(\n      this.oldNode,\n      (this.oldNode = this.render(__data)),\n      this.element,\n      this.container\n    )\n    if (this.mounted && this.oldNode && testIfVNodesDiffer(__data)) {\n      this.componentWillUpdate && this.componentWillUpdate(this)\n    } else {\n      this.beforeCreateComponent && this.beforeCreateComponent(this)\n      this.componentWasCreated && this.componentWasCreated(this)\n      this.mounted = true\n      return\n    }\n    this.componentDidUpdate && testIfVNodesDiffer(__data) && this.componentDidUpdate(this)\n  }\n  \n  /**\n   * Method to destroy component.\n   * First unbind events.\n   * Then remove component element from DOM.\n   * Also null out component properties.\n   * @returns void\n   */\n  unmount() {\n    const self = this\n    this.componentWillUnmount && this.componentWillUnmount(this)\n    this.container.removeChild(this.element)\n    this.container = undefined\n    for (let key in this) {\n      delete this[key]\n    }\n    delete this.state\n    this.update = undefined\n    this.unmount = undefined\n  }\n}\n\n// Polyfill for Element.closest:\nif (window.Element && !Element.prototype.closest) {\n  Element.prototype.closest = \n  function(s) {\n    let matches = (this.document || this.ownerDocument).querySelectorAll(s)\n    let i\n    let el = this\n    do {\n      i = matches.length\n      while (--i >= 0 && matches.item(i) !== el) {}\n    } while ((i < 0) && (el = el.parentElement))\n    return el\n  }\n}\n","import {h, Component} from 'composi'\n\nexport const title = new Component({\n  container: 'header',\n  render: (title) => {\n    return (\n      <nav>\n        <h1>{title}</h1>\n      </nav>\n    )\n  }\n})\n","import {h, Component} from 'composi'\nimport {uuid} from '../utils/uuid'\nimport {ListItem} from './list-item'\nimport {Footer} from './footer'\n\n// Define Todo List class:\nexport class TodoList extends Component {\n  constructor(props) {\n    super(props)\n    this.setActiveState = this.setActiveState.bind(this)\n    this.deleteItem = this.deleteItem.bind(this)\n    this.itemsToShow = []\n    this.showAll = this.showAll.bind(this)\n    this.showActive = this.showActive.bind(this)\n    this.showCompleted = this.showCompleted.bind(this)\n    this.addItem = this.addItem.bind(this)\n  }\n  render(data) {\n    const state = this.state\n    this.itemsToShow = []\n    state.map(item => {\n      if (item.active === true) {\n        this.itemsToShow.push(item)\n      }\n    })\n\n    return (\n      <div class=\"parent-view\">\n        <p class=\"add-todo\">\n          <input type=\"text\"/>\n          <button class='addItem' onclick={this.addItem}>Add Item</button>\n        </p>\n        <ul class='todo-list'>\n          {\n            data.map(item => (\n              <ListItem {...{props: this, item}}/>\n            ))\n          }\n        </ul>\n        <Footer props={this} />\n      </div>\n    )\n  }\n  setActiveState(e) {\n    const id = e.target.closest('li').dataset.id\n    let state = this.state\n    const index = state.findIndex(item => item.id == id)\n    state[index].active = !state[index].active\n    this.setState(state)\n    localStorage.setItem('todo-list', JSON.stringify(state))\n  }\n  deleteItem(e) {\n    const id = e.target.closest('li').dataset.id\n    let state = this.state\n    const index = state.findIndex(item => item.id == id)\n    state.splice(index, 1)\n    this.setState(state)\n    localStorage.setItem('todo-list', JSON.stringify(state))\n  }\n  showAll(e) {\n    this.setSelectedStateOfButtons(e)\n    const listItems = this.getAllListItems()\n    listItems.map(item => item.classList.remove('hidden'))\n  }\n  showActive(e) {\n    this.setSelectedStateOfButtons(e)\n    const listItems = this.getAllListItems()\n    this.state.map((item, idx) => {\n      if (!item.active) listItems[idx].classList.add('hidden')\n      else listItems[idx].classList.remove('hidden')\n    })\n  }\n  showCompleted(e) {\n    this.setSelectedStateOfButtons(e)\n    const listItems = this.getAllListItems()\n    this.state.map((item, idx) => {\n      if (item.active) listItems[idx].classList.add('hidden')\n      else listItems[idx].classList.remove('hidden')\n    })\n  }\n  setSelectedStateOfButtons(e) {\n    var button = e.target\n    for (let i = 0; i < button.parentNode.children.length; i++) {\n      button.parentNode.children[i].className = ''\n    }\n    button.className = 'selected'\n  }\n  addItem() {\n    const input = this.element.querySelector('input')\n    const value = input.value\n    if (value) {\n      this.setState({active: true, value, id: uuid()}, this.state.length)\n      localStorage.setItem('todo-list', JSON.stringify(this.state))\n      input.value = ''\n    } else {\n      alert('Please provide a todo to add!')\n    }\n  }\n  getAllListItems() {\n    return Array.prototype.slice.call(this.element.querySelectorAll('li'))\n  }\n}\n","import {h, Component} from 'composi'\n\n// List Item Component:\nexport function ListItem({props, item}) {\n  return (\n    <li class={item.active ? 'active' : ''} data-id={item.id}>\n      <button class='set-state' onclick={props.setActiveState}>\n        <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 20 20\" version=\"1.1\"><g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"selection-indicator\"><path d=\"M2,13 L9.9294326,16.8406135 L17.1937075,1.90173332\" id=\"checkmark\" stroke=\"#007AFF\" stroke-width=\"2\"></path></g></g></svg>\n      </button>\n      <h3>{item.value}</h3>\n      <button class=\"delete\" onclick={props.deleteItem}>\n        <svg width=\"20px\" height=\"20px\" viewBox=\"0 0 30 30\" version=\"1.1\"><g id=\"Page-1\" stroke=\"none\" stroke-width=\"1\" fill=\"none\" fill-rule=\"evenodd\"><g id=\"Delete\" stroke=\"#FF0000\" stroke-width=\"2\" stroke-linecap=\"square\"><path d=\"M26.5,3.5 L3.5,26.5\" id=\"Line\"></path><path d=\"M3.5,3.5 L26.5,26.5\" id=\"Line\"></path></g></g></svg>\n      </button>\n    </li>\n  )\n}","import {h, Component} from 'composi'\n\n// Footer Component:\nexport function Footer({props}) {\n  return (\n    <footer>\n      <div id=\"totals-view\"><span>{props.itemsToShow.length > 1 ? `${props.itemsToShow.length} items` : `${props.itemsToShow.length} item`} left.</span></div>\n      <p>Show: </p>\n      <div id=\"show-todo-state\">\n        <button onclick={props.showAll} id=\"show-all\" class=\"selected\">All</button>\n        <button onclick={props.showActive} id=\"show-active\" class=\"\">Active</button>\n        <button onclick={props.showCompleted} id=\"show-completed\" class=\"\">Completed</button>\n      </div>\n    </footer>\n  )\n}","import {h, Component} from 'composi'\nimport {title} from './components/title'\nimport {TodoList} from './components/todo-list'\nimport {uuid} from './utils/uuid'\nimport {loadFromLocalStorage} from './utils/localStorage'\n\n\ntitle.state = 'Composi Todo List'\n\n// Instantiate list with default todos:\nconst list = new TodoList({\n  container: 'section',\n  state: [{active: true, value: 'Take a nap', id: uuid()}, {active: false, value: 'Eat a snack', id: uuid()}, {active: true, value: 'Talk with Mom', id: uuid()}]\n})\n\n// When DOM is ready, check for todos stored in localStorage.\n// If they exist, use them to render list.\n// Otherwise use default list state.\ndocument.addEventListener('DOMContentLoaded', () => {\n  setTimeout(() => {\n    const data = loadFromLocalStorage()\n    if (data && data.length) {\n      list.state = data\n    } else {\n      list.update()\n    }\n  })\n})\n","export function loadFromLocalStorage() {\n  // Get data from localStorage\n  let todos = localStorage.getItem('todo-list')\n  return JSON.parse(todos)\n}\n"],"names":["h","type","props","stack","node","children","args","concat","reverse","length","Array","isArray","pop","map","unshift","item","push","mixin","obj1","obj2","result","i","setProps","element","name","value","oldValue","style","String","err","setAttributeNS","setAttribute","removeAttribute","createElement","svg","document","createTextNode","createElementNS","keys","forEach","key","appendChild","child","createNode","getKey","diffAndPatch","container","oldNode","nextSibling","insertBefore","oldProps","len","oldLen","oldKeyed","oldElements","keyed","k","oldElement","childNodes","oldChild","oldKey","j","newChild","newKey","keyedNode","removeElement","reusableNode","nodeValue","data","uuid","Math","floor","random","removeChild","hasOwnProperty","p","defineProperty","rAF","window","requestAnimationFrame","webkitRequestAnimationFrame","mozRequestAnimationFrame","msRequestAnimationFrame","cb","setTimeout","dataStore","Date","getTime","Component","selector","root","render","state","this","querySelector","componentShouldUpdate","mounted","beforeCreateComponent","componentWasCreated","componentWillUpdate","componentDidUpdate","componentWillUnmount","position","call","setState","babelHelpers.typeof","testIfVNodesDiffer","JSON","stringify","__render","__data","vdom","elem","id","parentNode","body","patch","undefined","update","unmount","_this","Element","prototype","closest","s","matches","ownerDocument","querySelectorAll","el","parentElement","title","TodoList","setActiveState","bind","deleteItem","itemsToShow","showAll","showActive","showCompleted","addItem","active","class","onclick","data-id","width","height","viewBox","version","stroke","stroke-width","fill","fill-rule","d","stroke-linecap","e","target","dataset","index","findIndex","setItem","splice","setSelectedStateOfButtons","getAllListItems","classList","remove","listItems","idx","add","button","className","input","slice","list","addEventListener","todos","localStorage","getItem","parse","loadFromLocalStorage"],"mappings":"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"}